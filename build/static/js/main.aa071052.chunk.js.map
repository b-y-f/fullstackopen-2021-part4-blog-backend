{"version":3,"sources":["components/Notification.js","services/blogs.js","reducers/blogsReducer.js","components/Login.js","services/login.js","reducers/notificationReducer.js","reducers/userReducer.js","components/Navgation.js","components/Blogview.js","components/Togglable.js","components/NewBlogForm.js","components/UserView.js","components/UserInfo.js","App.js","store.js","index.js"],"names":["Notification","message","useSelector","state","style","border","padding","borderWidth","baseUrl","token","getAll","a","axios","get","request","data","setToken","newToken","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","addComment","obj","req","initBlogs","dispatch","blogService","blogs","type","Login","handleLogin","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","name","onChange","target","timer","login","credentials","response","loginService","user","window","localStorage","setItem","JSON","stringify","Navgation","handleLogout","backgroundColor","to","onClick","changeMessage","second","clearTimeout","setTimeout","notificationReducer","action","Blogview","blog","useDispatch","comment","setComment","className","title","url","likes","oldBlog","changedBlog","author","content","comments","map","c","date","_id","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","NewBlogForm","setTitle","setAuthor","setUrl","newBlog","then","catch","alert","UserView","can","blogStyle","paddingTop","paddingLeft","marginBottom","b","UserInfo","dict","Map","forEach","undefined","set","arr","Array","from","i","find","App","sort","useEffect","loggedUserJSON","getItem","parse","getUser","error","console","log","clear","location","reload","matchBlogId","useRouteMatch","singleBlog","params","matchUserId","userBlogs","filter","loginUserBlogs","path","reducer","combineReducers","concat","newBlogList","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa071052.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n\n  const message = useSelector(state => state.message)\n\n  const style = {\n    border: 'solid',\n    padding: 10,\n    borderWidth: 1\n  }\n\n  if(message){\n    return(\n      <div style={style}>\n        {message}\n      </div>\n    )\n\n  }else{\n    return(\n      <></>\n    )\n  }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async() => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization : token },\n  }\n  const request = await axios.post(baseUrl, newObject, config)\n  return request.data\n}\n\nconst update = async(id, newObject) => {\n  const request = await axios.put(`${ baseUrl }/${id}`, newObject)\n  return request.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization : token },\n  }\n  const request = await axios.delete(`${ baseUrl }/${id}`,config)\n  return request.data\n}\n\nconst addComment = async (id, obj) => {\n  const req = await axios.post(`${baseUrl}/${id}/comments`, obj)\n  return req.data\n}\n\n\nexport default { getAll,setToken,create,update,remove,addComment  }","import blogService from '../services/blogs'\n\nconst initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'ALL',\n      blogs,\n    })\n\n  }\n}\n\nconst addBlog = (newBlog) => {\n  return async dispatch => {\n    const blog = await blogService.create(newBlog)\n    dispatch({\n      type:'NEW',\n      data:{ blog }\n    })\n  }\n}\n\nconst updateBlog = (oldBlog) => {\n  return async dispatch => {\n    const changedBlog = { ...oldBlog,likes:oldBlog.likes+1 }\n    const blog = await blogService.update(oldBlog.id,changedBlog)\n\n    dispatch({\n      type: 'LIKE_ADD_ONE',\n      blog\n    })\n  }\n}\n\nconst deleteBlog = (id) => {\n  return async dispatch => {\n    const blog = await blogService.remove(id)\n    dispatch({\n      type: 'DELETE',\n      data: {\n        id,\n        blog\n      }\n    })\n  }\n}\n\nconst addComment = (id ,content) => {\n  return async dispatch => {\n    const blog = await blogService.addComment(id,{ content })\n    dispatch({\n      type:'ADD_COMMENT',\n      blog,\n      id\n    })\n  }\n}\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type)  {\n  case 'ALL': {\n    return action.blogs\n  }\n  case 'NEW': {\n    return state.concat(action.data.blog)\n  }\n  case 'LIKE_ADD_ONE': {\n    const newBlogList = state.filter(blog => blog.id !== action.blog.id)\n    return newBlogList.concat(action.blog)\n  }\n  case 'DELETE': {\n    return state.filter(blog => blog.id !== action.data.id)\n  }\n  case 'ADD_COMMENT':{\n    const newBlogList = state.filter(blog => blog.id !== action.id)\n    return newBlogList.concat(action.blog)\n  }\n  default:\n    return state\n  }\n}\n\n\nexport { initBlogs, blogsReducer ,addBlog ,updateBlog,deleteBlog,addComment }","import React,{ useState } from 'react'\n\nexport default function Login({ handleLogin }){\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  return(\n    <div>\n\n      <h2>Log in to application</h2>\n      <form onSubmit={(event) => {\n        event.preventDefault()\n        handleLogin(username,password)\n        setUsername('')\n        setPassword('')\n      }}>\n        <div>\n            username\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n            password\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">\n            login\n        </button>\n      </form>\n    </div>\n  )\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","\nlet timer\n\nexport const changeMessage = ( message,second ) => {\n\n  return dispatch => {\n    dispatch({\n      type: 'SET_MESSAGE',\n      message,\n    })\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      dispatch({ type:'SET_MESSAGE',message:null })\n    },second*1000)\n\n  }\n}\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_MESSAGE':\n    return action.message\n  default:\n    return state\n  }\n}\n\n\nexport default notificationReducer","import  blogService  from '../services/blogs'\nimport loginService from '../services/login'\n\n\nconst login = (username, password) => {\n\n  return async dispatch => {\n    const user = await loginService.login({ username, password })\n    window.localStorage.setItem('loggedUser', JSON.stringify(user))\n    blogService.setToken(user.token)\n    return dispatch({\n      type:'LOGIN',\n      user,\n    })\n  }\n}\n\n\nconst getUser = (loggedUserJSON) => {\n\n  const user = JSON.parse(loggedUserJSON)\n  blogService.setToken(user.token)\n  return {\n    type:'LOGIN',\n    user\n  }\n}\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.user\n  default:\n    return state\n  }\n}\n\nexport {  getUser,login,userReducer }\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Navgation({ handleLogout,user }){\n  const navStyle = {\n    backgroundColor:'#00CED1'\n  }\n  return (\n    <div style={navStyle}>\n      <span>\n        <Link to='/'>blogs</Link>\n      </span>\n      &nbsp; &nbsp;\n      <span>\n        <Link to='/users'>users</Link>\n      </span>\n      &nbsp; &nbsp; {user.name} logged in &nbsp; &nbsp;\n      <button onClick={handleLogout}> Log out</button>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addComment, updateBlog } from '../reducers/blogsReducer'\nimport { changeMessage } from '../reducers/notificationReducer'\n\nexport default function Blogview({ blog }){\n  const dispatch = useDispatch()\n\n  const [comment, setComment] = useState('')\n\n  return(\n    <div key={blog.id}>\n      <h2 className=\"blogTitle\">\n        {blog.title}\n      </h2>\n      <div className=\"blogDetail\">\n        <div className=\"blogUrl\">{blog.url}</div>\n        <div className=\"blogLikes\">likes : {blog.likes}\n          <button\n            className='likeButton'\n            onClick={() => {\n              dispatch(updateBlog(blog))\n              dispatch(changeMessage('You liked it!',5))\n            }}>like\n          </button>\n        </div>\n        <div>added by {blog.author}</div>\n        <h2>Comments</h2>\n        <div className=\"addComment\">\n          <input\n            value={comment}\n            onChange={({ target }) => setComment(target.value)} />\n          <button onClick={() => {\n            dispatch(addComment(blog.id,comment))\n            setComment('')\n          }}>\n            add</button>\n        </div>\n        <ul>\n          {blog.comments.map(c => (\n            <li key={c._id}><p>{c.content}</p> at {c.date}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addBlog, initBlogs } from '../reducers/blogsReducer'\nimport { changeMessage } from '../reducers/notificationReducer'\n\nconst NewBlogForm = () => {\n\n  const dispatch = useDispatch()\n\n  const [title, setTitle] = useState('')\n  const [author,setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleAddBlog = (event) => {\n    event.preventDefault()\n    dispatch(addBlog({ 'title':title,'author':author,'url':url }))\n      .then(() => {\n        dispatch(initBlogs())\n        dispatch(changeMessage('added!',5))\n        setAuthor('')\n        setTitle('')\n        setUrl('')\n      })\n      .catch(() => alert('fail'))\n  }\n\n\n  return (\n    <div>\n      <h2>Create new</h2>\n      <form onSubmit={handleAddBlog}>\n        <div>\n            title:\n          <input\n            id='title'\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n            author:\n          <input\n            id='author'\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n            url:\n          <input\n            id='url'\n            type=\"text\"\n            value={url}\n            name=\"Url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default NewBlogForm","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Togglable from './Togglable'\nimport NewBlogForm from './NewBlogForm'\n\n\nexport default function UserView ({ blogs,can, user })  {\n\n  if (!blogs) {\n    return null\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n  return(\n    <>\n      <h2>{can? 'Your blogs':user.name}</h2>\n      <h3>Blog list</h3>\n      {can?\n        <Togglable buttonLabel=\"create new blog\">\n          <NewBlogForm />\n        </Togglable>:null}\n\n      <div>\n        {blogs.map(b => (\n          <div style={blogStyle} key={b.id}>\n            <Link to={`/blogs/${b.id}`}>\n              {b.title}\n            </Link>\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport {  Link } from 'react-router-dom'\n\nexport default function UserInfo ({ blogs }){\n\n  const dict = new Map()\n  blogs.forEach((b) => {\n    const name = b.user.username\n    if(dict.get(name)!==undefined){\n      dict.set(name,dict.get(name)+1)\n    }else{\n      dict.set(name, 1)\n    }\n  })\n\n  const arr = Array.from(dict)\n\n  const findUserId = (username) =>\n    blogs.find(b => b.user.username === username).user.id\n\n  return(\n    <>\n      <h2>Users</h2>\n      <br/>\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>blogs count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {arr.map(i => (\n            <tr key={i[0]}>\n              <td>\n                <Link to={`/users/${findUserId(i[0])}`}>\n                  {i[0]}\n                </Link>\n              </td>\n              <td>{i[1]}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n\n      </table>\n    </>\n  )\n}","import React, { useEffect } from 'react'\nimport Notification from './components/Notification'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { initBlogs } from './reducers/blogsReducer'\nimport Login from './components/Login'\nimport { getUser,login } from './reducers/userReducer'\nimport Navgation from './components/Navgation'\nimport Blogview from './components/Blogview'\n\nimport {\n  Switch, Route, Redirect,useRouteMatch\n} from 'react-router-dom'\nimport UserView from './components/UserView'\nimport UserInfo from './components/UserInfo'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const blogs = useSelector(state => state.blogs)\n    .sort((a, b) => a.likes > b.likes ? -1 : a.likes < b.likes ? 1 : 0)\n  const user = useSelector(state => state.user )\n\n  useEffect(() => {\n    dispatch(initBlogs())\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON){\n      dispatch(getUser(loggedUserJSON))\n    }\n  }, [dispatch])\n\n  const handleLogin = async(username,password) => {\n    try {\n      dispatch(login(username,password))\n      dispatch(initBlogs())\n    } catch (error) {\n      console.log('login err')\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.clear()\n    window.location.reload()\n  }\n\n  const matchBlogId = useRouteMatch('/blogs/:id')\n  const singleBlog = matchBlogId?\n    blogs.find(blog => blog.id===matchBlogId.params.id):null\n\n  const matchUserId = useRouteMatch('/users/:id')\n  const userBlogs = matchUserId?\n    blogs.filter(b => matchUserId.params.id === b.user.id):\n    null\n\n  const loginUserBlogs = user?\n    blogs.filter(b => user.id === b.user.id) :null\n\n  const can = (matchUserId,user) => {\n    if (matchUserId && user){\n      return matchUserId.params.id === user.id\n    }\n  }\n\n  return (\n    <>\n      {user? <Navgation user={user} handleLogout={handleLogout}/> : null}\n      <Notification />\n      <Switch>\n\n        <Route path=\"/users/:id\">\n          {user?<UserView\n            blogs={userBlogs}\n            can={can(matchUserId,user)}\n            user={user}\n          />:<Redirect to='/' />}\n        </Route>\n\n        <Route path=\"/users\">\n          {user? <UserInfo blogs={blogs}/>: <Redirect to=\"/\"/>}\n        </Route>\n\n        <Route path=\"/blogs/:id\">\n          {user? <Blogview blog={singleBlog}/>: <Redirect to=\"/\"/>}\n        </Route>\n\n        <Route path=\"/\">\n          {user? <UserView\n            blogs={loginUserBlogs} can={true} user={user}/>:\n            <Login\n              handleLogin={handleLogin}\n              handleLogout={handleLogout}/>\n          }\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport notificationReducer from './reducers/notificationReducer'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { blogsReducer } from './reducers/blogsReducer'\nimport { userReducer } from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  message: notificationReducer,\n  blogs: blogsReducer,\n  user :userReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n)"],"sourceRoot":""}